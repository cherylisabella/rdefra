% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ukair_get_coordinates.R
\name{ukair_get_coordinates}
\alias{ukair_get_coordinates}
\title{Get Easting and Northing coordinates from DEFRA}
\usage{
ukair_get_coordinates(ids, en = FALSE, all_coords = FALSE)
}
\arguments{
\item{ids}{contains the station identification code defined by DEFRA. It can be: a) an alphanumeric string, b) a vector of strings or c) a data frame. In the latter case, the column containing the codes should be named "UK.AIR.ID", all the other columns will be ignored.}

\item{en}{logical set to FALSE by default. If set to TRUE, it adds two columns to the output dataframe containing "Easting" and "Northing" coordinates, wherever available.}

\item{all_coords}{logical set to FALSE by default. If set to TRUE forces the extraction of coordinates for all the IDs (not only those with missing coordinates).}
}
\value{
A data.frame containing at least three columns named "UK.AIR.ID", "Latitude", and "Longitude". If en is set to TRUE, there are other two columns containing the "Easting" and "Northing" coordinates.
}
\description{
This function takes as input the UK AIR ID and returns Easting and Northing coordinates (British National Grid, EPSG:27700).
}
\details{
If the input is a data frame with some of the columns named "UK.AIR.ID", "Latitude" and "Longitude", the function only infills missing Latitude/Longitude values. If you want to get the coordinates for all the IDs, set all_coords = TRUE.
}
\examples{
 \dontrun{
 # Case a: alphanumeric string
 ukair_get_coordinates("UKA12536")

 # Case b: vector of strings
 ukair_get_coordinates(c("UKA15910", "UKA15956", "UKA16663", "UKA16097"))

 # Case c: data frame
 ukair_get_coordinates(ukair_catalogue()[1:10,])
 }

}

